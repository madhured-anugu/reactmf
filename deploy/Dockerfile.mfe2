# Dockerfile for MFE2 (User Profile)
FROM node:18-alpine AS builder

WORKDIR /app

# Copy MFE2 package files first
COPY mfe2/package*.json ./

# Install MFE2 dependencies
RUN npm ci

# Copy root tsconfig (needed by mfe2's tsconfig)
COPY tsconfig.json ../tsconfig.json

# Copy MFE2 application files
COPY mfe2/ ./

# Build the MFE2 application
RUN npm run build

# Production stage
FROM nginx:alpine

# Copy nginx configuration
COPY <<EOF /etc/nginx/conf.d/default.conf
server {
    listen 8080;
    server_name localhost;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # CORS headers for module federation
    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
    add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range" always;

    # Handle client-side routing
    location / {
        try_files \$uri \$uri/ /index.html;
    }

    # Special handling for remoteEntry.js
    location /assets/remoteEntry.js {
        add_header Content-Type "application/javascript";
        add_header Access-Control-Allow-Origin "*" always;
        try_files \$uri =404;
    }

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml+rss application/javascript;
}
EOF

# Copy built files
COPY --from=builder /app/dist /usr/share/nginx/html

# Expose port
EXPOSE 8080

CMD ["nginx", "-g", "daemon off;"]
