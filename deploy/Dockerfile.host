# Dockerfile for Host Application
FROM node:18-alpine AS builder

WORKDIR /app

# Copy host package files first
COPY host/package*.json ./

# Install host dependencies
RUN npm ci

# Copy root tsconfig (needed by host's tsconfig)
COPY tsconfig.json ./tsconfig.json

# Copy host application files
COPY host/ ./host/

# Build the host application
RUN cd host && npm run build

# Production stage
FROM nginx:alpine

# Install curl and jq for downloading MFE configuration
RUN apk add --no-cache curl jq

# Copy nginx configuration
COPY <<EOF /etc/nginx/conf.d/default.conf
server {
    listen 8080;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # CORS headers for module federation (host needs to load remote MFEs)
    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
    add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range" always;

    # Handle client-side routing
    location / {
        try_files \$uri \$uri/ /index.html;
    }

    # Security headers (more permissive CSP for module federation)
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' 'unsafe-inline' 'unsafe-eval' data: blob: *; script-src 'self' 'unsafe-inline' 'unsafe-eval' *; style-src 'self' 'unsafe-inline' *;" always;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml+rss application/javascript;
}
EOF

# Copy built files
COPY --from=builder /app/host/dist /usr/share/nginx/html

# Copy the URL injection script
COPY deploy/inject-mfe-urls.sh /usr/local/bin/inject-mfe-urls.sh
RUN chmod +x /usr/local/bin/inject-mfe-urls.sh

# Expose port
EXPOSE 8080

# Start script that injects URLs and starts nginx
CMD ["/usr/local/bin/inject-mfe-urls.sh"]
