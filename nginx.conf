events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Add CORS headers for micro frontend federation
    add_header Access-Control-Allow-Origin *;
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
    add_header Access-Control-Allow-Headers "Origin, Content-Type, Accept";

    server {
        listen 8080;
        server_name localhost;
        
        # Root location serves the host application
        location / {
            root /usr/share/nginx/html/host;
            try_files $uri $uri/ /index.html;
            
            # Cache control for static assets
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }
        
        # MFE1 (Product List) - served on /mfe1 path
        location /mfe1/ {
            alias /usr/share/nginx/html/mfe1/;
            try_files $uri $uri/ /mfe1/index.html;
            
            # Ensure remoteEntry.js is served with correct content type
            location ~* remoteEntry\.js$ {
                add_header Content-Type application/javascript;
                expires 0;
                add_header Cache-Control "no-cache, no-store, must-revalidate";
            }
        }
        
        # MFE2 (User Profile) - served on /mfe2 path  
        location /mfe2/ {
            alias /usr/share/nginx/html/mfe2/;
            try_files $uri $uri/ /mfe2/index.html;
            
            # Ensure remoteEntry.js is served with correct content type
            location ~* remoteEntry\.js$ {
                add_header Content-Type application/javascript;
                expires 0;
                add_header Cache-Control "no-cache, no-store, must-revalidate";
            }
        }
        
        # Health check endpoint for Cloud Run
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}
